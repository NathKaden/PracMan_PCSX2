<Project Sdk="Microsoft.NET.Sdk" TreatAsLocalProperty="Platform" DefaultTargets="Build">
    <PropertyGroup>
        <TargetFramework>net8.0-macos</TargetFramework>
        <OutputType>Exe</OutputType>
        <Nullable>enable</Nullable>
        <WarningsAsErrors>Nullable</WarningsAsErrors>
        <ImplicitUsings>true</ImplicitUsings>
        <SupportedOSPlatformVersion>10.15</SupportedOSPlatformVersion>
        <RootNamespace>PracMan</RootNamespace>
        <AssemblyName>PracMan</AssemblyName>
        <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <UseHardenedRuntime>true</UseHardenedRuntime>
        <RuntimeIdentifiers>osx-x64;osx-arm64</RuntimeIdentifiers>
        <EnableCodeSigning>true</EnableCodeSigning>
        <CodesignKey>Developer ID Application: Vetle Hjelle (NLX8KMYWCN)</CodesignKey>
    </PropertyGroup>
    <ItemGroup>
      <ProjectReference Include="..\PracManCore\PracManCore.csproj" />
    </ItemGroup>

    <ItemGroup>
        <!-- Define the folders/files you want to copy -->
        <ScriptsFolder Include="..\Scripts\**\*" />
        <SkinsFolder Include="..\controllerskins\**\*" />
        <ScriptsFolder Update="..\Scripts\Runtime\ScriptWindow.lua">
          <Link>Runtime\ScriptWindow.lua</Link>
        </ScriptsFolder>
        <ScriptsFolder Update="..\Scripts\Runtime\config.toml">
          <Link>Runtime\config.toml</Link>
        </ScriptsFolder>
        <ScriptsFolder Remove="..\Scripts\NPEA00385\Test\**" />
        <ScriptsFolder Update="..\Scripts\Runtime\bit.lua">
          <Link>Runtime\bit.lua</Link>
        </ScriptsFolder>
    </ItemGroup>
    
    <Target Name="ThinLibLuaDylib" BeforeTargets="Build" Condition="'$(Configuration)' == 'Release'">
        <!-- Thin the x64 liblua54.dylib to only include x86_64 -->
        <Exec Condition="'$(RuntimeIdentifier)' == 'osx-x64'"
              ContinueOnError="true"
              Command="lipo -thin x86_64 $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54.dylib -output $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54_thinned.dylib; mv $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54_thinned.dylib $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54.dylib" />

        <!-- Thin the arm64 liblua54.dylib to only include arm64 -->
        <Exec Condition="'$(RuntimeIdentifier)' == 'osx-arm64'"
              ContinueOnError="true"
              Command="lipo -thin arm64 $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54.dylib -output $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54_thinned.dylib; mv $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54_thinned.dylib $(OutputPath)PracMan.app/Contents/MonoBundle/liblua54.dylib" />
    </Target>

    <Target Name="CopyFolderStructureToAppBundle" AfterTargets="Build">
        <!-- Define where the Resources folder is located in the app bundle -->
        <PropertyGroup>
            <AppBundleResourcesFolder>$(OutputPath)$(AssemblyName).app/Contents/Resources/</AppBundleResourcesFolder>
        </PropertyGroup>

        <!-- Ensure the destination folders are created and copy files with directory structure -->
        <Copy SourceFiles="@(ScriptsFolder)"
              DestinationFiles="@(ScriptsFolder->'$(AppBundleResourcesFolder)/User/Scripts/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(SkinsFolder)"
              DestinationFiles="@(SkinsFolder->'$(AppBundleResourcesFolder)/User/controllerskins/%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>

</Project>
